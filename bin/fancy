#!/usr/bin/env node

var program = require('commander');
var package = require('../package');
var request = require('request');
var cheerio = require('cheerio');
var async = require('async');
var _ = require('underscore');

var wishlistUrlTemplate = 'http://www.amazon.co.uk/registry/wishlist/${wishlistId}?layout=compact'
var wishlistId = '1QJBF75CZDO9E'
var wishlistUrl = wishlistUrlTemplate.replace('${wishlistId}', wishlistId);

program
    .version(package.version)
    .usage('[options] <command>...');

program
    .command('update')
    .description('Processes the files in the specified directory')
    .action(function(dir) {
    	var items = [];
    	var currentPage = 0;
    	var totalPages = null;
    	async.doWhilst(
    		function(done) {
    			currentPage++;
    			var url = wishlistUrl + '&page=' + currentPage;
    			console.log('requesting url %s', url);
		    	request(url, { encoding: 'binary' }, function(err, resp, body) {
		    		if (!err && resp.statusCode === 200) {
		    			$ = cheerio.load(body);
		    			totalPages = parseInt($('.num-pages').text());
		    			
		    			items = items.concat(processItems($));
		    			
		    			done();
		    		}
		    	});
		    },
		    function() {
		    	console.log('currentPage %d of totalPages %d', currentPage, totalPages);
		    	return currentPage < totalPages;
		    },
		    function(err) {
		    	//console.log(items);
				console.log();
				console.log('Found %d items', items.length);
				vinylItems = _.filter(items, function(item) { return /vinyl/i.test(item.title); });
				console.log(vinylItems);
				console.log('Total Vinyl items', vinylItems.length);
				process.exit(0);
		    }
	    );
    });

program.parse(process.argv);

processItems = function(data) {
	var items = [];
	$('.compact-items').find('.itemWrapper tr').each(function(i, itemRow) {
		var itemProperties = $(this).children();
		var item = {
			title: $(itemProperties[0]).find('.productTitle a').text() + $(itemProperties[0]).find('span.tiny').text(),
			buy: $(itemProperties[1]).find('span a span').attr('alt'),
			price: parseFloat($(itemProperties[2]).text().replace('Â£', '')),
			want: parseInt($(itemProperties[3]).text()),
			got: parseInt($(itemProperties[4]).text()),
			priority: $(itemProperties[5]).text()
		};
		
		items.push(item);
	});

	return items;
};

